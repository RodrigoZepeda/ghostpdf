% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pdf_to_image.R
\name{pdf_to_image}
\alias{pdf_to_image}
\title{PDF to Image}
\usage{
pdf_to_image(
  pdf_file,
  first_page = 1,
  last_page = NULL,
  output_file = "output.png",
  page_sequence = NULL,
  image_device = NULL,
  resolution = 750,
  preserve_annotations = TRUE,
  gs_path = NULL,
  quiet = TRUE,
  additional_flags = ""
)
}
\arguments{
\item{pdf_file}{pdf file from which extract pages}

\item{first_page}{first page to extract (default = 1)}

\item{last_page}{last page to extract (default = number of pages in pdf)}

\item{output_file}{name of the output image}

\item{page_sequence}{page numbers to extract if \code{first_page} and \code{last_page} are
not specified you can create a page_sequence of numbers of the pdf pages to extract}

\item{image_device}{Specify one of the image devices in
\url{https://www.ghostscript.com/doc/9.50/Devices.htm#TIFF}}

\item{resolution}{Image resolution (dpi)}

\item{preserve_annotations}{boolean flag to try and preserve annotations in the pdfs (default TRUE)}

\item{gs_path}{path to Ghostscript installation}

\item{quiet}{Don't output messages}

\item{additional_flags}{Additional string of bash flags to pass to ghostscript}
}
\description{
Convert s from a \code{pdf} into \code{png},\code{tiff},\code{jpeg},
\code{bmp}, \code{fax}, \code{pcx} or \code{psd}
}
\details{
You can either extract a continuous sequence of pages specifying  \code{first_page}
and \code{last_page} or a discontinuous sequence by using \code{page_sequence}.
Needs Ghostscript installation to work.
}
\examples{
\dontrun{
for (i in 1:20){
  pdf(paste0("Example",i,".pdf"), width = 6, height = 4)
  plot(rnorm(10), rnorm(10), main = paste("Page",i,".pdf"))
  dev.off()
}

pdf_merge(list.files(pattern = "Example.*.pdf"), output_file = "test.pdf", cleanup = TRUE)

#Get pages 4 to 18
pdf_to_image("test.pdf", 4, 18)
file.remove(list.files(pattern = "output.*.png"))

#Get pages 1, 5, 7
pdf_to_image("test.pdf", page_sequence = c(1,5,7,12), output_file = "example_2.jpg")
file.remove(list.files(pattern = "example_2.*.jpg"))

#Get pages 12 till the end
pdf_to_image("test.pdf", first_page = 12, output_file = "example_3.tiff", resolution = 100)
file.remove(list.files(pattern = "example_3.*.tiff"))

file.remove("test.pdf")
}
}
