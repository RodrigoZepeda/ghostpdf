% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pdf_shrink.R
\name{pdf_shrink}
\alias{pdf_shrink}
\title{PDF Shrink}
\usage{
pdf_shrink(
  pdf_file,
  output_file = pdf_file,
  gs_path = NULL,
  quiet = TRUE,
  resolution = 300,
  max_inline_image_size = 1000,
  pdf_settings = c("screen", "ebook", "default", "printer", "prepress"),
  detect_duplicate_images = TRUE,
  additional_flags = c("-dCompressFonts=true", "-dCompressStreams=true")
)
}
\arguments{
\item{pdf_file}{pdf file from which to count the number of pages}

\item{output_file}{output pdf file of reduced size}

\item{gs_path}{path to Ghostscript installation}

\item{quiet}{Don't output messages}

\item{resolution}{Image resolution (in dpi)}

\item{max_inline_image_size}{Specifies the maximum size of an inline image, in bytes.
For images larger than this size, pdfwrite will create an XObject instead of embedding the
image into the context stream. The default value is 4000. Note that redundant inline images
must be embedded each time they occur in the document, while multiple references can be made
to a single XObject image. Therefore it may be advantageous to set a small or zero value if
the source document is expected to contain multiple identical images, reducing the size of
the generated PDF.}

\item{pdf_settings}{Presets the "distiller parameters" to one of four predefined settings:
"eBook" \code{"ebook"}, "Screen Optimized" \code{"screen"},
"Print Optimized" \code{"printer"}, "Prepress Optimized" \code{"prepress"} or
\code{"default"}. Lowest is \code{"screen"}.}

\item{detect_duplicate_images}{boolean that attempts to detect the same image file
and keep only one version of the image to reduce pdf size.}

\item{additional_flags}{Additional string of bash flags to pass to ghostscript}
}
\description{
Apply functions to attempt to reduce the size of a pdf
}
\details{
Needs Ghostscript installation to work.
}
\examples{
for (i in 1:9){
  pdf(paste0("Example",i,".pdf"), width = 6, height = 4)
  plot(rnorm(10), rnorm(10), main = paste("Example",i,".pdf"))
  dev.off()
}

pdf_merge(list.files(pattern = "Example.*\\\\.pdf"), output_file = "test.pdf", cleanup = TRUE)
#Check current file size:
original_size <- file.info("test.pdf")["size"]

#Shrink file
pdf_shrink("test.pdf")

#Check new file size
reduced_size <- file.info("test.pdf")["size"]

#Verify size is smaller
original_size > reduced_size

file.remove("test.pdf")
}
